{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. ASE\\\\Anul III\\\\Sem 1\\\\Tehnologii web\\\\Proiect\\\\frontend\\\\src\\\\components\\\\Logare.js\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { post, put, get } from '../Calls';\nimport { utilizatorRoute } from '../ApiRoutes';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Logare() {\n  const logareUtilizator = async () => {\n    if (!utilizator.UserName) {\n      alert('Username-ul nu a fost completat');\n    } else if (!utilizator.Parola) {\n      alert('Parola nu a fost completata');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        autoFocus: true,\n        label: \"Username\",\n        name: \"UserName\",\n        id: \"UserName\",\n        value: utilizator.Username,\n        onChange: e => onChangeUtilizator(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        autoFocus: true,\n        label: \"Parola\",\n        name: \"Parola\",\n        id: \"Parola\",\n        type: visibility.showPassword ? \"text\" : \"password\",\n        value: utilizator.Parola,\n        onChange: e => onChangeUtilizator(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword,\n        onMouseDown: handleMouseDownPassword // edge=\"end\"\n        ,\n        style: {\n          marginTop: \"20px\"\n        },\n        children: visibility.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 71\n        }, this),\n        onClick: () => {\n          navigate(\"/\");\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        onClick: logareUtilizator,\n        children: \"Logare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = Logare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logare\");","map":{"version":3,"sources":["D:/1. ASE/Anul III/Sem 1/Tehnologii web/Proiect/frontend/src/components/Logare.js"],"names":["useState","useEffect","TextField","Button","useNavigate","useParams","SaveIcon","CancelIcon","post","put","get","utilizatorRoute","Box","IconButton","OutlinedInput","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","Logare","logareUtilizator","utilizator","UserName","alert","Parola","m","width","Username","e","onChangeUtilizator","visibility","showPassword","handleClickShowPassword","handleMouseDownPassword","marginTop","navigate"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { post, put, get } from '../Calls';\r\nimport { utilizatorRoute } from '../ApiRoutes';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nexport default function Logare(){\r\n\r\n    const logareUtilizator = async () => {\r\n        if(!utilizator.UserName){\r\n            alert('Username-ul nu a fost completat');\r\n        }\r\n        else if(!utilizator.Parola){\r\n            alert('Parola nu a fost completata');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            sx={{\r\n                '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n        >\r\n            <div>\r\n\r\n                <TextField\r\n                    required\r\n                    autoFocus\r\n                    label=\"Username\"\r\n                    name=\"UserName\"\r\n                    id=\"UserName\"\r\n                    value={utilizator.Username}\r\n                    onChange={e => onChangeUtilizator(e)}\r\n                />\r\n                <TextField\r\n                    required\r\n                    autoFocus\r\n                    label=\"Parola\"\r\n                    name=\"Parola\"\r\n                    id=\"Parola\"\r\n                    type={visibility.showPassword ? \"text\" : \"password\"}\r\n                    value={utilizator.Parola}\r\n                    onChange={e => onChangeUtilizator(e)}\r\n                />\r\n                <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    // edge=\"end\"\r\n                    style={{\r\n                        marginTop:\r\n                            \"20px\"\r\n                    }}\r\n                >\r\n                    {visibility.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n                \r\n            </div>\r\n            <div>\r\n                <Button color=\"primary\" variant='outlined' startIcon={<CancelIcon />}\r\n                    onClick={() => { navigate(\"/\") }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n\r\n                <Button color=\"primary\" variant='outlined'\r\n                    onClick={logareUtilizator}\r\n                >\r\n                    Logare\r\n                </Button>\r\n            </div>\r\n        </Box>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
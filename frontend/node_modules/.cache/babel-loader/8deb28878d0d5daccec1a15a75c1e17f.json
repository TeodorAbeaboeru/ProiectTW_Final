{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. ASE\\\\Anul III\\\\Sem 1\\\\Tehnologii web\\\\Proiect\\\\frontend\\\\src\\\\components\\\\ExperientaList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { get, remove } from '../Calls';\nimport { Button, Paper, Table, TableBody, TableCell, TableRow, TableContainer, TableHead, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { experientaRoute } from '../ApiRoutes'; //import { useNavigate } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExperientaList() {\n  _s();\n\n  const [rows, setRows] = useState([]); //const [needUpdate, setNeedUpdate] = useState(false)\n  //const navigate = useNavigate();\n\n  useEffect(async () => {\n    let data = await get(experientaRoute);\n    setRows(data);\n  }, []); //needUpdate intre [] mai sus 1 rand\n\n  const deleteExperienta = async (id, index) => {\n    await remove(experientaRoute, id);\n    rows.splice(index, 1);\n    setRows(rows); //setNeedUpdate(!needUpdate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns is-centered\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column is-5-tablet is-4-desktop is-3-widescreen\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: \"box\",\n        onSubmit: e => this.tryLogin(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"control has-icons-left has-icons-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.email,\n              onChange: e => this.handleChange(\"email\", e),\n              className: \"input\",\n              type: \"email\",\n              required: true,\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon is-small is-left\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-envelope\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon is-small is-right\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"control has-icons-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.password,\n              onChange: e => this.handleChange(\"password\", e),\n              className: \"input\",\n              type: \"password\",\n              required: true,\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon is-small is-left\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-lock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-success\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this); // return(\n  //     <div>\n  //         <div>\n  //             <Button\n  //                 variant='contained'\n  //                 color=\"primary\"\n  //                 startIcon={<AddIcon/>}\n  //                 //onClick={() => {navigate(\"ExperientaEdit\")}}\n  //             >\n  //             Adauga experienta\n  //             </Button>\n  //         </div>\n  //         <br/>\n  //         <TableContainer component={Paper}>\n  //             <Table aria-label=\"simple table\">\n  //                 <TableHead>\n  //                     <TableRow>\n  //                         <TableCell>ID Experienta</TableCell>\n  //                         <TableCell align=\"left\">Punct Plecare</TableCell>\n  //                         <TableCell align=\"left\">Punct Sosire</TableCell>\n  //                         <TableCell align=\"left\">Localitate</TableCell>\n  //                         <TableCell align=\"left\">Mijloc de Transport</TableCell>\n  //                         <TableCell align=\"left\">Ora Plecare</TableCell>\n  //                         <TableCell align=\"left\">Durata Calatorie</TableCell>\n  //                         <TableCell align=\"left\">Grad Aglomerare</TableCell>\n  //                         <TableCell align=\"left\">Observatii</TableCell>\n  //                         <TableCell align=\"left\">Nivel Satisfactie</TableCell>\n  //                     </TableRow>\n  //                 </TableHead>\n  //                 <TableBody>\n  //                     {rows.map((row, index) => (\n  //                         <TableRow key={row.IDExperienta}>\n  //                             <TableCell component=\"th\" scope =\"row\">\n  //                                 {row.IDExperienta}\n  //                             </TableCell>\n  //                             <TableCell align=\"left\">{row.PunctPlecare}</TableCell>\n  //                             <TableCell align=\"left\">{row.PunctSosire}</TableCell>\n  //                             <TableCell align=\"left\">{row.Localitate}</TableCell>\n  //                             <TableCell align=\"left\">{row.MijlocTransport}</TableCell>\n  //                             <TableCell align=\"left\">{row.OraPlecare}</TableCell>\n  //                             <TableCell align=\"left\">{row.DurataCalatorie}</TableCell>\n  //                             <TableCell align=\"left\">{row.GradAglomerare}</TableCell>\n  //                             <TableCell align=\"left\">{row.Observatii}</TableCell>\n  //                             <TableCell align=\"left\">{row.NivelSatisfactie}</TableCell>\n  //                             <TableCell align=\"left\">\n  //                                <IconButton >\n  //                                    <EditIcon color=\"primary\"/>\n  //                                </IconButton>\n  //                                <IconButton onClick={() => deleteExperienta(row.IDExperienta, index)}>\n  //                                    <DeleteIcon color=\"secondary\" />\n  //                                </IconButton>\n  //                             </TableCell>\n  //                         </TableRow>\n  //                     ))}\n  //                 </TableBody>\n  //             </Table>\n  //         </TableContainer>\n  //     </div>\n  // )\n} //onClick={() => navigate(`/ExperientaEdit/${row.IDExperienta}`)} pe butonul de edit\n\n_s(ExperientaList, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = ExperientaList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExperientaList\");","map":{"version":3,"sources":["D:/1. ASE/Anul III/Sem 1/Tehnologii web/Proiect/frontend/src/components/ExperientaList.js"],"names":["useState","useEffect","get","remove","Button","Paper","Table","TableBody","TableCell","TableRow","TableContainer","TableHead","IconButton","AddIcon","DeleteIcon","EditIcon","experientaRoute","ExperientaList","rows","setRows","data","deleteExperienta","id","index","splice","e","tryLogin","state","email","handleChange","password"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {get, remove} from '../Calls';\r\nimport {Button, Paper, Table, TableBody, TableCell, TableRow, TableContainer, TableHead, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {experientaRoute} from '../ApiRoutes';\r\n//import { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function ExperientaList(){\r\n\r\n    const [rows, setRows] = useState([]);\r\n    //const [needUpdate, setNeedUpdate] = useState(false)\r\n    //const navigate = useNavigate();\r\n\r\n    useEffect(async() => {\r\n        let data = await get(experientaRoute);\r\n        setRows(data);\r\n    }, []);\r\n    //needUpdate intre [] mai sus 1 rand\r\n    const deleteExperienta = async(id, index) => {\r\n        await remove(experientaRoute, id);\r\n\r\n        rows.splice(index, 1);\r\n        setRows(rows);\r\n        //setNeedUpdate(!needUpdate);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"columns is-centered\">\r\n                <div className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                    <form\r\n                        action=\"\"\r\n                        className=\"box\"\r\n                        onSubmit={e => this.tryLogin(e)}\r\n                    >\r\n                        <div className=\"field\">\r\n                            <p className=\"control has-icons-left has-icons-right\">\r\n                                <input\r\n                                    value={this.state.email}\r\n                                    onChange={e =>\r\n                                        this.handleChange(\"email\", e)\r\n                                    }\r\n                                    className=\"input\"\r\n                                    type=\"email\"\r\n                                    required\r\n                                    placeholder=\"Email\"\r\n                                />\r\n                                <span className=\"icon is-small is-left\">\r\n                                    <i className=\"fas fa-envelope\"></i>\r\n                                </span>\r\n                                <span className=\"icon is-small is-right\">\r\n                                    <i className=\"fas fa-check\"></i>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <p className=\"control has-icons-left\">\r\n                                <input\r\n                                    value={this.state.password}\r\n                                    onChange={e =>\r\n                                        this.handleChange(\"password\", e)\r\n                                    }\r\n                                    className=\"input\"\r\n                                    type=\"password\"\r\n                                    required\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <span className=\"icon is-small is-left\">\r\n                                    <i className=\"fas fa-lock\"></i>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <p className=\"control\">\r\n                                <button className=\"button is-success\">\r\n                                    Login\r\n                                </button>\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n    // return(\r\n    //     <div>\r\n    //         <div>\r\n    //             <Button\r\n    //                 variant='contained'\r\n    //                 color=\"primary\"\r\n    //                 startIcon={<AddIcon/>}\r\n    //                 //onClick={() => {navigate(\"ExperientaEdit\")}}\r\n    //             >\r\n    //             Adauga experienta\r\n    //             </Button>\r\n    //         </div>\r\n\r\n    //         <br/>\r\n\r\n    //         <TableContainer component={Paper}>\r\n    //             <Table aria-label=\"simple table\">\r\n    //                 <TableHead>\r\n    //                     <TableRow>\r\n    //                         <TableCell>ID Experienta</TableCell>\r\n    //                         <TableCell align=\"left\">Punct Plecare</TableCell>\r\n    //                         <TableCell align=\"left\">Punct Sosire</TableCell>\r\n    //                         <TableCell align=\"left\">Localitate</TableCell>\r\n    //                         <TableCell align=\"left\">Mijloc de Transport</TableCell>\r\n    //                         <TableCell align=\"left\">Ora Plecare</TableCell>\r\n    //                         <TableCell align=\"left\">Durata Calatorie</TableCell>\r\n    //                         <TableCell align=\"left\">Grad Aglomerare</TableCell>\r\n    //                         <TableCell align=\"left\">Observatii</TableCell>\r\n    //                         <TableCell align=\"left\">Nivel Satisfactie</TableCell>\r\n    //                     </TableRow>\r\n    //                 </TableHead>\r\n    //                 <TableBody>\r\n    //                     {rows.map((row, index) => (\r\n    //                         <TableRow key={row.IDExperienta}>\r\n    //                             <TableCell component=\"th\" scope =\"row\">\r\n    //                                 {row.IDExperienta}\r\n    //                             </TableCell>\r\n    //                             <TableCell align=\"left\">{row.PunctPlecare}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.PunctSosire}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.Localitate}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.MijlocTransport}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.OraPlecare}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.DurataCalatorie}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.GradAglomerare}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.Observatii}</TableCell>\r\n    //                             <TableCell align=\"left\">{row.NivelSatisfactie}</TableCell>\r\n                                \r\n    //                             <TableCell align=\"left\">\r\n    //                                <IconButton >\r\n    //                                    <EditIcon color=\"primary\"/>\r\n    //                                </IconButton>\r\n    //                                <IconButton onClick={() => deleteExperienta(row.IDExperienta, index)}>\r\n    //                                    <DeleteIcon color=\"secondary\" />\r\n    //                                </IconButton>\r\n    //                             </TableCell>\r\n    //                         </TableRow>\r\n    //                     ))}\r\n    //                 </TableBody>\r\n    //             </Table>\r\n    //         </TableContainer>\r\n    //     </div>\r\n    // )\r\n}\r\n//onClick={() => navigate(`/ExperientaEdit/${row.IDExperienta}`)} pe butonul de edit"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. ASE\\\\Anul III\\\\Sem 1\\\\Tehnologii web\\\\Proiect\\\\frontend\\\\src\\\\components\\\\ExperientaEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Box from '@mui/material/Box';\nimport { TextField, Button, InputLabel, NativeSelect, MenuItem } from '@material-ui/core';\nimport { post, put, get } from '../Calls';\nimport { experientaRoute } from '../ApiRoutes';\nimport { experientaEditRoute } from '../ApiRoutes';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport './ExperientaEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExperientaEdit() {\n  _s();\n\n  const navigate = useNavigate();\n  const routerParams = useParams();\n  const id = routerParams.id;\n  const idExp = routerParams.idExp;\n  const errors = 0;\n  const [experienta, setExperienta] = useState({\n    PunctPlecare: \"\",\n    PunctSosire: \"\",\n    Localitate: \"\",\n    MijlocTransport: \"\",\n    OraPlecare: \"\",\n    DurataCalatorie: 0,\n    GradAglomerare: 0,\n    Observatii: \"\",\n    NivelSatisfactie: 0,\n    IDUtilizator: id\n  });\n  useEffect(async () => {\n    if (!idExp) return;\n    let data = await get(experientaEditRoute, idExp);\n    setExperienta(data);\n  }, []);\n\n  const onChangeExperienta = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setExperienta({ ...experienta,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const saveExperienta = async () => {\n    if (!experienta.Localitate) {\n      alert('Localitatea nu a fost completata');\n    } else if (!experienta.Localitate.match('^.{2,30}$')) {\n      alert(\"Localitatea trebuie să aibă 2-30 caractere!\");\n    } else if (!experienta.PunctPlecare) {\n      alert('Punctul de plecare nu a fost completat');\n    } else if (!experienta.PunctPlecare.match('^.{2,30}$')) {\n      alert(\"Punctul de plecare trebuie să aibă 2-30 caractere!\");\n    } else if (!experienta.PunctSosire) {\n      alert('Punctul de sosire nu a fost completat');\n    } else if (!experienta.PunctSosire.match('^.{2,30}$')) {\n      alert(\"Punctul de sosire trebuie să aibă 2-30 caractere!\");\n    } else if (!experienta.MijlocTransport) {\n      alert('Mijlocul de transport nu a fost completat');\n    } else if (experienta.MijlocTransport != 'metrou' || experienta.MijlocTransport != 'Metrou' || experienta.MijlocTransport != 'autobuz' || experienta.MijlocTransport != 'Autobuz' || experienta.MijlocTransport != 'tramvai' || experienta.MijlocTransport != 'Tramvai') {\n      alert('Mijlocul de transport trebuie să fie metrou/tramvai/autobuz');\n    } else if (!experienta.MijlocTransport.match('^.{2,30}$')) {\n      alert(\"Mijlocul de transport trebuie să aibă 2-30 caractere!\");\n    } else if (!experienta.OraPlecare) {\n      alert('Ora de plecare nu a fost completata');\n    } else if (!experienta.OraPlecare.match('^[0-2][0-3]:[0-5][0-9]$')) {\n      alert('Ora trebuie să aibă formatul HH:MM');\n    } else if (!experienta.DurataCalatorie) {\n      alert('Durata nu a fost completata');\n    } else if (experienta.DurataCalatorie < 1) {\n      alert('Durata călătoriei trebuie să fie de minim 1 minut!');\n    } else if (experienta.DurataCalatorie > 180) {\n      alert('Durata călătoriei nu poate să depășească 180 minute!');\n    } else if (isNaN(experienta.DurataCalatorie)) {\n      alert('Durata trebuie sa fie scrisa in numar minute');\n    } else if (!experienta.GradAglomerare) {\n      alert('Gradul de aglomerare nu a fost completat');\n    } else if (isNaN(experienta.GradAglomerare) || experienta.GradAglomerare < 1 || experienta.GradAglomerare > 5) {\n      alert('Gradul de aglomerare este de la 1-5');\n    } else if (!experienta.NivelSatisfactie) {\n      alert('Nivelul de satisfactie nu a fost selectat');\n    } else if (isNaN(experienta.NivelSatisfactie) || experienta.NivelSatisfactie < 1 || experienta.NivelSatisfactie > 10) {\n      alert('Gradul de aglomerare este de la 1-10');\n    } else if (experienta.Observatii > 500) {\n      alert('Observațiile nu pot depăși 500 de caractere!');\n    } else {\n      if (!idExp) await post(experientaRoute, experienta);else await put(experientaRoute, idExp, experienta);\n      navigate(`/PaginaProfilUtilizator/${id}/ExperientaList`);\n    }\n  };\n\n  function cancelEdit() {\n    if (!id) {} else {\n      navigate(`/PaginaProfilUtilizator/${id}/ExperientaList`);\n    } //navigate(\"/ExperientaList\")\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: 'body { background-color: rgb(136, 128, 197); }'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        backgroundColor: \"lightblue\",\n        marginTop: \"8%\",\n        marginRight: \"30%\",\n        marginLeft: \"30%\",\n        borderRadius: \"10px\",\n        padding: \"15px\"\n      },\n      component: \"form\",\n      sx: {\n        '& .MuiTextField-root': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            id: \"Localitate\",\n            name: \"Localitate\",\n            label: \"Localitate\",\n            fullWidth: true,\n            value: experienta.Localitate,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            id: \"MijlocTransport\",\n            name: \"MijlocTransport\",\n            label: \"Mijloc Transport\",\n            fullWidth: true,\n            value: experienta.MijlocTransport,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            id: \"PunctPlecare\",\n            name: \"PunctPlecare\",\n            label: \"Punct Plecare\",\n            fullWidth: true,\n            value: experienta.PunctPlecare,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            id: \"PunctSosire\",\n            name: \"PunctSosire\",\n            label: \"Punct Sosire\",\n            fullWidth: true,\n            value: experienta.PunctSosire,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            id: \"OraPlecare\",\n            name: \"OraPlecare\",\n            label: \"Ora Plecare\",\n            fullWidth: true,\n            value: experienta.OraPlecare,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            required: true,\n            autoFocus: true,\n            id: \"DurataCalatorie\",\n            name: \"DurataCalatorie\",\n            label: \"Durata Calatorie\",\n            fullWidth: true,\n            value: experienta.DurataCalatorie,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            required: true,\n            autoFocus: true,\n            id: \"GradAglomerare\",\n            name: \"GradAglomerare\",\n            label: \"Grad Aglomerare\",\n            fullWidth: true,\n            value: experienta.GradAglomerare,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nivel Satisfactie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emoji1\",\n            className: \"emoji\",\n            onClick: e => {\n              experienta.NivelSatisfactie = 1;\n            },\n            children: \"\\uD83D\\uDE24\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emoji2\",\n            className: \"emoji\",\n            onClick: e => {\n              experienta.NivelSatisfactie = 2;\n            },\n            children: \"\\uD83D\\uDE12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emoji3\",\n            className: \"emoji\",\n            onClick: e => {\n              experienta.NivelSatisfactie = 3;\n            },\n            children: \"\\uD83D\\uDE10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emoji4\",\n            className: \"emoji\",\n            onClick: e => {\n              experienta.NivelSatisfactie = 4;\n            },\n            children: \"\\uD83D\\uDE42\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"emoji5\",\n            className: \"emoji\",\n            onClick: e => {\n              experienta.NivelSatisfactie = 5;\n            },\n            children: \"\\uD83D\\uDE03\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            id: \"Observatii\",\n            name: \"Observatii\",\n            label: \"Observatii\",\n            fullWidth: true,\n            value: experienta.Observatii,\n            onChange: e => onChangeExperienta(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: \"15px\"\n        },\n        id: \"btnSave\",\n        color: \"primary\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 80\n        }, this),\n        onClick: saveExperienta,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: \"15px\"\n        },\n        id: \"btnCancel\",\n        color: \"primary\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 82\n        }, this),\n        onClick: () => {\n          cancelEdit();\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExperientaEdit, \"jDHoKUgKQPl9AE7H7tFkgZWT7UU=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = ExperientaEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExperientaEdit\");","map":{"version":3,"sources":["D:/1. ASE/Anul III/Sem 1/Tehnologii web/Proiect/frontend/src/components/ExperientaEdit.js"],"names":["useState","useEffect","SaveIcon","CancelIcon","Box","TextField","Button","InputLabel","NativeSelect","MenuItem","post","put","get","experientaRoute","experientaEditRoute","useNavigate","useParams","PropTypes","Helmet","ExperientaEdit","navigate","routerParams","id","idExp","errors","experienta","setExperienta","PunctPlecare","PunctSosire","Localitate","MijlocTransport","OraPlecare","DurataCalatorie","GradAglomerare","Observatii","NivelSatisfactie","IDUtilizator","data","onChangeExperienta","e","preventDefault","stopPropagation","target","name","value","saveExperienta","alert","match","isNaN","cancelEdit","backgroundColor","marginTop","marginRight","marginLeft","borderRadius","padding","m","width","margin"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Box from '@mui/material/Box';\r\nimport { TextField, Button, InputLabel, NativeSelect, MenuItem } from '@material-ui/core';\r\nimport { post, put, get } from '../Calls';\r\nimport { experientaRoute } from '../ApiRoutes';\r\nimport { experientaEditRoute } from '../ApiRoutes';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { Helmet } from 'react-helmet';\r\nimport './ExperientaEdit.css'\r\n\r\nexport default function ExperientaEdit() {\r\n\r\n    const navigate = useNavigate();\r\n    const routerParams = useParams();\r\n    const id = routerParams.id;\r\n    const idExp = routerParams.idExp;\r\n    const errors = 0;\r\n\r\n    const [experienta, setExperienta] = useState\r\n        ({\r\n            PunctPlecare: \"\",\r\n            PunctSosire: \"\",\r\n            Localitate: \"\",\r\n            MijlocTransport: \"\",\r\n            OraPlecare: \"\",\r\n            DurataCalatorie: 0,\r\n            GradAglomerare: 0,\r\n            Observatii: \"\",\r\n            NivelSatisfactie: 0,\r\n            IDUtilizator: id\r\n        });\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n        if (!idExp)\r\n            return;\r\n\r\n        let data = await get(experientaEditRoute, idExp);\r\n        setExperienta(data);\r\n    }, [])\r\n\r\n    const onChangeExperienta = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setExperienta({ ...experienta, [e.target.name]: e.target.value });\r\n    }\r\n    \r\n    \r\n    const saveExperienta = async () => {\r\n        if (!experienta.Localitate) {\r\n            alert('Localitatea nu a fost completata');\r\n        }\r\n        else if (!experienta.Localitate.match('^.{2,30}$')) {\r\n            alert(\"Localitatea trebuie să aibă 2-30 caractere!\");\r\n        }\r\n        else if (!experienta.PunctPlecare) {\r\n            alert('Punctul de plecare nu a fost completat');\r\n        }\r\n        else if (!experienta.PunctPlecare.match('^.{2,30}$')) {\r\n            alert(\"Punctul de plecare trebuie să aibă 2-30 caractere!\");\r\n        }\r\n        else if (!experienta.PunctSosire) {\r\n            alert('Punctul de sosire nu a fost completat');\r\n        }\r\n        else if (!experienta.PunctSosire.match('^.{2,30}$')) {\r\n            alert(\"Punctul de sosire trebuie să aibă 2-30 caractere!\");\r\n        }\r\n        else if (!experienta.MijlocTransport) {\r\n            alert('Mijlocul de transport nu a fost completat');\r\n        }\r\n        else if (experienta.MijlocTransport != 'metrou' || experienta.MijlocTransport != 'Metrou'\r\n        || experienta.MijlocTransport != 'autobuz' || experienta.MijlocTransport != 'Autobuz' ||\r\n        experienta.MijlocTransport != 'tramvai' || experienta.MijlocTransport != 'Tramvai') {\r\n            alert('Mijlocul de transport trebuie să fie metrou/tramvai/autobuz');\r\n        }\r\n        else if (!experienta.MijlocTransport.match('^.{2,30}$')) {\r\n            alert(\"Mijlocul de transport trebuie să aibă 2-30 caractere!\");\r\n        }\r\n        else if (!experienta.OraPlecare) {\r\n            alert('Ora de plecare nu a fost completata');\r\n        }\r\n        else if (!experienta.OraPlecare.match('^[0-2][0-3]:[0-5][0-9]$')) {\r\n            alert('Ora trebuie să aibă formatul HH:MM');\r\n        }\r\n        else if (!experienta.DurataCalatorie) {\r\n            alert('Durata nu a fost completata');\r\n        }\r\n        else if (experienta.DurataCalatorie < 1) {\r\n            alert('Durata călătoriei trebuie să fie de minim 1 minut!');\r\n        }\r\n        else if (experienta.DurataCalatorie > 180) {\r\n            alert('Durata călătoriei nu poate să depășească 180 minute!');\r\n        }\r\n        else if (isNaN(experienta.DurataCalatorie)) {\r\n            alert('Durata trebuie sa fie scrisa in numar minute');\r\n        }\r\n        else if (!experienta.GradAglomerare) {\r\n            alert('Gradul de aglomerare nu a fost completat');\r\n        }\r\n        else if (isNaN(experienta.GradAglomerare) || experienta.GradAglomerare < 1 || experienta.GradAglomerare > 5) {\r\n            alert('Gradul de aglomerare este de la 1-5');\r\n        }\r\n        else if (!experienta.NivelSatisfactie) {\r\n            alert('Nivelul de satisfactie nu a fost selectat');\r\n        }\r\n        else if (isNaN(experienta.NivelSatisfactie) || experienta.NivelSatisfactie < 1 || experienta.NivelSatisfactie > 10) {\r\n            alert('Gradul de aglomerare este de la 1-10');\r\n        }\r\n        else if (experienta.Observatii > 500) {\r\n            alert('Observațiile nu pot depăși 500 de caractere!');\r\n        }\r\n        else {\r\n            if (!idExp)\r\n                await post(experientaRoute, experienta);\r\n            else\r\n                await put(experientaRoute, idExp, experienta);\r\n            navigate(`/PaginaProfilUtilizator/${id}/ExperientaList`)\r\n\r\n        }\r\n\r\n    }\r\n    function cancelEdit() {\r\n        if (!id) {\r\n\r\n        }\r\n        else {\r\n            navigate(`/PaginaProfilUtilizator/${id}/ExperientaList`)\r\n        }\r\n        //navigate(\"/ExperientaList\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>{'body { background-color: rgb(136, 128, 197); }'}</style>\r\n            </Helmet>\r\n            <Box style={{ backgroundColor: \"lightblue\", marginTop: \"8%\", marginRight: \"30%\", marginLeft: \"30%\", borderRadius: \"10px\", padding: \"15px\" }}\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <TextField\r\n                            required\r\n                            autoFocus\r\n                            id=\"Localitate\"\r\n                            name=\"Localitate\"\r\n                            label=\"Localitate\"\r\n                            fullWidth\r\n                            value={experienta.Localitate}\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            autoFocus\r\n                            id=\"MijlocTransport\"\r\n                            name=\"MijlocTransport\"\r\n                            label=\"Mijloc Transport\"\r\n                            fullWidth\r\n                            value={experienta.MijlocTransport }\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        /> \r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            required\r\n                            autoFocus\r\n                            id=\"PunctPlecare\"\r\n                            name=\"PunctPlecare\"\r\n                            label=\"Punct Plecare\"\r\n                            fullWidth\r\n                            value={experienta.PunctPlecare}\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            autoFocus\r\n                            id=\"PunctSosire\"\r\n                            name=\"PunctSosire\"\r\n                            label=\"Punct Sosire\"\r\n                            fullWidth\r\n                            value={experienta.PunctSosire}\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            required\r\n                            autoFocus\r\n                            id=\"OraPlecare\"\r\n                            name=\"OraPlecare\"\r\n                            label=\"Ora Plecare\"\r\n                            fullWidth\r\n                            value={experienta.OraPlecare}\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        />\r\n                        <TextField type=\"number\"\r\n                            required\r\n                            autoFocus\r\n                            id=\"DurataCalatorie\"\r\n                            name=\"DurataCalatorie\"\r\n                            label=\"Durata Calatorie\"\r\n                            fullWidth\r\n                            value={experienta.DurataCalatorie}\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <TextField type=\"number\"\r\n                            required\r\n                            autoFocus\r\n                            id=\"GradAglomerare\"\r\n                            name=\"GradAglomerare\"\r\n                            label=\"Grad Aglomerare\"\r\n                            fullWidth\r\n                            value={experienta.GradAglomerare}\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        />\r\n\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        <label>Nivel Satisfactie</label>\r\n                        <br></br>\r\n                        <span id=\"emoji1\" className=\"emoji\" onClick={(e) => {\r\n                            experienta.NivelSatisfactie = 1;\r\n                        }\r\n                        } >&#128548;</span>\r\n                        <span id=\"emoji2\" className=\"emoji\" onClick={(e) => {\r\n                            experienta.NivelSatisfactie = 2;\r\n                        }\r\n                        } >&#128530;</span>\r\n                        <span id=\"emoji3\" className=\"emoji\" onClick={(e) => {\r\n                            experienta.NivelSatisfactie = 3;\r\n                        }\r\n                        } >&#128528;</span>\r\n                        <span id=\"emoji4\" className=\"emoji\" onClick={(e) => {\r\n                            experienta.NivelSatisfactie = 4;\r\n                        }\r\n                        } >&#128578;</span>\r\n                        <span id=\"emoji5\" className=\"emoji\" onClick={(e) => {\r\n                            experienta.NivelSatisfactie = 5;\r\n                        }\r\n                        } >&#128515;</span>\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            autoFocus\r\n                            id=\"Observatii\"\r\n                            name=\"Observatii\"\r\n                            label=\"Observatii\"\r\n                            fullWidth\r\n                            value={experienta.Observatii}\r\n                            onChange={e => onChangeExperienta(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Button style={{ margin: \"15px\" }}\r\n                    id='btnSave' color=\"primary\" variant='outlined' startIcon={<SaveIcon />}\r\n                    onClick={saveExperienta}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button style={{ margin: \"15px\" }}\r\n                    id='btnCancel' color=\"primary\" variant='outlined' startIcon={<CancelIcon />}\r\n                    onClick={() => { cancelEdit() }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
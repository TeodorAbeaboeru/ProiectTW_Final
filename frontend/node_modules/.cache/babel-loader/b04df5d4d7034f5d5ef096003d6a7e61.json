{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. ASE\\\\Anul III\\\\Sem 1\\\\Tehnologii web\\\\Proiect\\\\frontend\\\\src\\\\components\\\\Logare.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { post, put, get } from '../Calls';\nimport { utilizatorRoute } from '../ApiRoutes';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Logare() {\n  _s();\n\n  const [utilizator, setUtilizator] = useState({\n    Parola: \"\",\n    UserName: \"\"\n  });\n  const [visibility, setVisibility] = useState({\n    showPassword: false\n  });\n  const navigate = useNavigate();\n  const routerParams = useParams();\n  const id = routerParams.id;\n\n  const logareUtilizator = async () => {\n    if (!utilizator.UserName) {\n      alert('Username-ul nu a fost completat');\n    } else if (!utilizator.Parola) {\n      alert('Parola nu a fost completata');\n    }\n\n    let utilizatorExistent = false;\n    let data = await get(utilizatorRoute, id);\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].UserName == utilizator.UserName && data[i].Parola == utilizator.Parola) {\n        utilizatorExistent = true;\n      }\n    }\n\n    if (utilizatorExistent) {\n      //navigare la pagina de profil\n      navigate(\"/Profil\");\n    } else {\n      alert('Date incorecte!');\n    }\n  };\n\n  const onChangeUtilizator = e => {\n    e.preventDefault();\n    e.stopPropagation(); //se duce in obiectul magazin, ia proprietatile la rand \n    //name il ia din name setata mai jos - vezi TextField\n    //numele trb sa coincida cu ce am setat pt obiect mai sus.\n\n    setUtilizator({ ...utilizator,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChange = prop => event => {\n    setVisibility({ ...visibility,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setVisibility({ ...visibility,\n      showPassword: !visibility.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: 'body { background-color: rgb(136, 128, 197); }'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        backgroundColor: \"lightblue\",\n        marginTop: \"15%\",\n        marginRight: \"30%\",\n        marginLeft: \"30%\",\n        borderRadius: \"10px\",\n        padding: \"15px\"\n      },\n      component: \"form\",\n      sx: {\n        '& .MuiTextField-root': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          autoFocus: true,\n          label: \"Username\",\n          name: \"UserName\",\n          id: \"UserName\",\n          value: utilizator.Username,\n          onChange: e => onChangeUtilizator(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          autoFocus: true,\n          label: \"Parola\",\n          name: \"Parola\",\n          id: \"Parola\",\n          type: visibility.showPassword ? \"text\" : \"password\",\n          value: utilizator.Parola,\n          onChange: e => onChangeUtilizator(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword // edge=\"end\"\n          ,\n          style: {\n            marginTop: \"20px\"\n          },\n          children: visibility.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"15px\"\n          },\n          color: \"primary\",\n          variant: \"outlined\",\n          onClick: logareUtilizator,\n          children: \"Logare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"15px\"\n          },\n          color: \"primary\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 36\n          }, this),\n          onClick: () => {\n            navigate(\"/\");\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Logare, \"9SEKoBACQ+AKb+csSTdev7KoIKw=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Logare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logare\");","map":{"version":3,"sources":["D:/1. ASE/Anul III/Sem 1/Tehnologii web/Proiect/frontend/src/components/Logare.js"],"names":["useState","useEffect","TextField","Button","useNavigate","useParams","SaveIcon","CancelIcon","post","put","get","utilizatorRoute","Box","IconButton","OutlinedInput","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","Helmet","Logare","utilizator","setUtilizator","Parola","UserName","visibility","setVisibility","showPassword","navigate","routerParams","id","logareUtilizator","alert","utilizatorExistent","data","i","length","onChangeUtilizator","e","preventDefault","stopPropagation","target","name","value","handleChange","prop","event","handleClickShowPassword","handleMouseDownPassword","backgroundColor","marginTop","marginRight","marginLeft","borderRadius","padding","m","width","Username","margin"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { post, put, get } from '../Calls';\r\nimport { utilizatorRoute } from '../ApiRoutes';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport default function Logare() {\r\n\r\n    const [utilizator, setUtilizator] = useState({\r\n        Parola: \"\",\r\n        UserName: \"\"\r\n    });\r\n    const [visibility, setVisibility] = useState({\r\n        showPassword: false\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n    const routerParams = useParams();\r\n    const id = routerParams.id;\r\n\r\n    const logareUtilizator = async () => {\r\n        if (!utilizator.UserName) {\r\n            alert('Username-ul nu a fost completat');\r\n        }\r\n        else if (!utilizator.Parola) {\r\n            alert('Parola nu a fost completata');\r\n        }\r\n        let utilizatorExistent = false;\r\n        let data = await get(utilizatorRoute, id);\r\n\r\n        for(let i=0; i< data.length; i++){\r\n            if(data[i].UserName == utilizator.UserName && data[i].Parola == utilizator.Parola){\r\n                utilizatorExistent = true;\r\n            }\r\n        }\r\n\r\n        if(utilizatorExistent){\r\n            //navigare la pagina de profil\r\n            navigate(\"/Profil\");\r\n        }\r\n        else {\r\n            alert('Date incorecte!');\r\n        }\r\n    }\r\n\r\n    const onChangeUtilizator = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        //se duce in obiectul magazin, ia proprietatile la rand \r\n        //name il ia din name setata mai jos - vezi TextField\r\n        //numele trb sa coincida cu ce am setat pt obiect mai sus.\r\n        setUtilizator({ ...utilizator, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setVisibility({ ...visibility, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setVisibility({\r\n            ...visibility,\r\n            showPassword: !visibility.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <style>{'body { background-color: rgb(136, 128, 197); }'}</style>\r\n            </Helmet>\r\n            <Box style={{ backgroundColor: \"lightblue\", marginTop: \"15%\", marginRight: \"30%\", marginLeft: \"30%\", borderRadius: \"10px\", padding: \"15px\" }}\r\n                component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <div>\r\n\r\n                    <TextField\r\n                        required\r\n                        autoFocus\r\n                        label=\"Username\"\r\n                        name=\"UserName\"\r\n                        id=\"UserName\"\r\n                        value={utilizator.Username}\r\n                        onChange={e => onChangeUtilizator(e)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        required\r\n                        autoFocus\r\n                        label=\"Parola\"\r\n                        name=\"Parola\"\r\n                        id=\"Parola\"\r\n                        type={visibility.showPassword ? \"text\" : \"password\"}\r\n                        value={utilizator.Parola}\r\n                        onChange={e => onChangeUtilizator(e)}\r\n                    />\r\n                    <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        // edge=\"end\"\r\n                        style={{\r\n                            marginTop:\r\n                                \"20px\"\r\n                        }}\r\n                    >\r\n                        {visibility.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n\r\n                </div>\r\n                <div>\r\n                    <Button style={{ margin: \"15px\" }}\r\n                        color=\"primary\"\r\n                        variant='outlined'\r\n                        onClick={logareUtilizator}\r\n                    >\r\n                        Logare\r\n                    </Button>\r\n\r\n                    <Button style={{ margin: \"15px\" }}\r\n                        color=\"primary\"\r\n                        variant='outlined'\r\n                        startIcon={<CancelIcon />}\r\n                        onClick={() => { navigate(\"/\") }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                   \r\n                </div>\r\n            </Box>\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}